'use strict';

const DEPENDENCY_LIST_MAP = {
  Accordion: [
    "ChevronDownIcon",
    "Children",
    "accordionTheme",
    "cloneElement",
    "get",
    "resolveProps",
    "twMerge",
    "useMemo",
    "useResolveTheme",
    "useState",
    "useThemeProvider"
  ],
  AccordionContent: [
    "accordionTheme",
    "get",
    "resolveProps",
    "twMerge",
    "useAccordionContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  AccordionTitle: [
    "accordionTheme",
    "get",
    "resolveProps",
    "twMerge",
    "useAccordionContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Alert: [
    "XIcon",
    "alertTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Avatar: [
    "avatarTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  AvatarGroup: [
    "avatarTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  AvatarGroupCounter: [
    "avatarTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Badge: [
    "badgeTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Banner: ["forwardRef", "resolveProps", "useThemeProvider"],
  BannerCollapseButton: [
    "Button",
    "forwardRef",
    "resolveProps",
    "useThemeProvider"
  ],
  Blockquote: [
    "blockquoteTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Breadcrumb: [
    "breadcrumbTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  BreadcrumbItem: [
    "ChevronRightIcon",
    "breadcrumbTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Button: [
    "ButtonBase",
    "buttonTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useButtonGroupContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  ButtonGroup: [
    "ButtonGroupContext",
    "buttonGroupTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Card: [
    "cardTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Carousel: [
    "ChevronLeftIcon",
    "ChevronRightIcon",
    "Children",
    "carouselTheme",
    "cloneElement",
    "forwardRef",
    "get",
    "isClient",
    "resolveProps",
    "twMerge",
    "useCallback",
    "useEffect",
    "useMemo",
    "useRef",
    "useResolveTheme",
    "useState",
    "useThemeProvider"
  ],
  Checkbox: [
    "checkboxTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Clipboard: [
    "Tooltip",
    "clipboardTheme",
    "copyToClipboard",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useState",
    "useThemeProvider"
  ],
  ClipboardWithIcon: [
    "CheckIcon",
    "ClipboardListIcon",
    "clipboardTheme",
    "copyToClipboard",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useState",
    "useThemeProvider"
  ],
  ClipboardWithIconText: [
    "CheckIcon",
    "ClipboardListIcon",
    "clipboardTheme",
    "copyToClipboard",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useState",
    "useThemeProvider"
  ],
  DarkThemeToggle: [
    "MoonIcon",
    "SunIcon",
    "darkThemeToggleTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeMode",
    "useThemeProvider"
  ],
  Datepicker: [
    "ArrowLeftIcon",
    "ArrowRightIcon",
    "CalendarIcon",
    "DatepickerContext",
    "DatepickerViewsDays",
    "DatepickerViewsDecades",
    "DatepickerViewsMonth",
    "DatepickerViewsYears",
    "TextInput",
    "Views",
    "WeekStart",
    "addMonths",
    "addYears",
    "datePickerTheme",
    "forwardRef",
    "get",
    "getFirstDateInRange",
    "getFormattedDate",
    "isDateEqual",
    "resolveProps",
    "startOfYearPeriod",
    "twMerge",
    "useEffect",
    "useImperativeHandle",
    "useMemo",
    "useRef",
    "useResolveTheme",
    "useState",
    "useThemeProvider"
  ],
  Drawer: [
    "DrawerContext",
    "drawerTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useEffect",
    "useId",
    "useResolveTheme",
    "useThemeProvider"
  ],
  DrawerHeader: [
    "CloseIcon",
    "HomeIcon",
    "drawerTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "useDrawerContext",
    "useId",
    "useResolveTheme",
    "useThemeProvider"
  ],
  DrawerItems: [
    "drawerTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useDrawerContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Dropdown: [
    "Button",
    "ChevronDownIcon",
    "ChevronLeftIcon",
    "ChevronRightIcon",
    "ChevronUpIcon",
    "DropdownContext",
    "FloatingFocusManager",
    "FloatingList",
    "cloneElement",
    "dropdownTheme",
    "get",
    "resolveProps",
    "twMerge",
    "useBaseFLoating",
    "useCallback",
    "useEffect",
    "useFloatingInteractions",
    "useListNavigation",
    "useMemo",
    "useRef",
    "useResolveTheme",
    "useState",
    "useThemeProvider",
    "useTypeahead"
  ],
  DropdownDivider: [
    "dropdownTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useDropdownContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  DropdownHeader: [
    "dropdownTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useDropdownContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  DropdownItem: [
    "ButtonBase",
    "dropdownTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useDropdownContext",
    "useListItem",
    "useMergeRefs",
    "useResolveTheme",
    "useThemeProvider"
  ],
  FileInput: [
    "fileInputTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  FloatingLabel: [
    "floatingLabelTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useId",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Footer: [
    "footerTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  FooterBrand: [
    "footerTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  FooterCopyright: [
    "footerTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  FooterDivider: [
    "footerTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  FooterIcon: [
    "footerTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  FooterLink: [
    "footerTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  FooterLinkGroup: [
    "footerTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  FooterTitle: [
    "footerTheme",
    "forwardRef",
    "get",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  HR: [
    "forwardRef",
    "get",
    "hrTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  HRIcon: [
    "QuoteRightIcon",
    "forwardRef",
    "get",
    "hrTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  HRSquare: [
    "forwardRef",
    "get",
    "hrTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  HRText: [
    "forwardRef",
    "get",
    "hrTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  HRTrimmed: [
    "forwardRef",
    "get",
    "hrTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  HelperText: [
    "forwardRef",
    "get",
    "helperTextTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Kbd: [
    "forwardRef",
    "get",
    "kbdTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Label: [
    "forwardRef",
    "get",
    "labelTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  List: [
    "forwardRef",
    "get",
    "listTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  ListItem: [
    "forwardRef",
    "get",
    "listTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  ListGroup: [
    "forwardRef",
    "get",
    "listGroupTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  ListGroupItem: [
    "forwardRef",
    "get",
    "listGroupTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  MegaMenu: [
    "Navbar",
    "forwardRef",
    "get",
    "megaMenuTheme",
    "resolveProps",
    "useResolveTheme",
    "useThemeProvider"
  ],
  MegaMenuDropdown: [
    "Dropdown",
    "get",
    "megaMenuTheme",
    "resolveProps",
    "twMerge",
    "useEffect",
    "useId",
    "useRef",
    "useResolveTheme",
    "useState",
    "useThemeProvider"
  ],
  MegaMenuDropdownToggle: [
    "forwardRef",
    "get",
    "megaMenuTheme",
    "mergeRefs",
    "resolveProps",
    "twMerge",
    "useEffect",
    "useId",
    "useRef",
    "useResolveTheme",
    "useState",
    "useThemeProvider"
  ],
  Modal: [
    "FloatingFocusManager",
    "FloatingOverlay",
    "FloatingPortal",
    "ModalContext",
    "forwardRef",
    "get",
    "modalTheme",
    "resolveProps",
    "twMerge",
    "useClick",
    "useDismiss",
    "useFloating",
    "useInteractions",
    "useMergeRefs",
    "useResolveTheme",
    "useRole",
    "useState",
    "useThemeProvider"
  ],
  ModalBody: [
    "forwardRef",
    "get",
    "modalTheme",
    "resolveProps",
    "twMerge",
    "useModalContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  ModalFooter: [
    "forwardRef",
    "get",
    "modalTheme",
    "resolveProps",
    "twMerge",
    "useModalContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  ModalHeader: [
    "OutlineXIcon",
    "forwardRef",
    "get",
    "modalTheme",
    "resolveProps",
    "twMerge",
    "useId",
    "useLayoutEffect",
    "useModalContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Navbar: [
    "NavbarContext",
    "forwardRef",
    "get",
    "navbarTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useState",
    "useThemeProvider"
  ],
  NavbarBrand: [
    "forwardRef",
    "get",
    "navbarTheme",
    "resolveProps",
    "twMerge",
    "useNavbarContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  NavbarCollapse: [
    "forwardRef",
    "get",
    "navbarTheme",
    "resolveProps",
    "twMerge",
    "useNavbarContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  NavbarLink: [
    "forwardRef",
    "get",
    "navbarTheme",
    "resolveProps",
    "twMerge",
    "useNavbarContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  NavbarToggle: [
    "BarsIcon",
    "forwardRef",
    "get",
    "navbarTheme",
    "resolveProps",
    "twMerge",
    "useNavbarContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Pagination: [
    "ChevronLeftIcon",
    "ChevronRightIcon",
    "PaginationButton",
    "PaginationNavigation",
    "forwardRef",
    "get",
    "paginationTheme",
    "range",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  PaginationButton: [
    "forwardRef",
    "get",
    "paginationTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Popover: [
    "FloatingFocusManager",
    "cloneElement",
    "get",
    "getArrowPlacement",
    "isValidElement",
    "popoverTheme",
    "resolveProps",
    "useBaseFLoating",
    "useFloatingInteractions",
    "useMemo",
    "useMergeRefs",
    "useRef",
    "useResolveTheme",
    "useState",
    "useThemeProvider"
  ],
  Progress: [
    "forwardRef",
    "get",
    "progressTheme",
    "resolveProps",
    "twMerge",
    "useId",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Radio: [
    "forwardRef",
    "get",
    "radioTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  RangeSlider: [
    "forwardRef",
    "get",
    "rangeSliderTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Rating: [
    "RatingContext",
    "forwardRef",
    "get",
    "ratingTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  RatingAdvanced: [
    "forwardRef",
    "get",
    "ratingAdvancedTheme",
    "resolveProps",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  RatingStar: [
    "StarIcon",
    "forwardRef",
    "get",
    "ratingTheme",
    "resolveProps",
    "twMerge",
    "useRatingContext",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Select: [
    "forwardRef",
    "get",
    "resolveProps",
    "selectTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Sidebar: [
    "SidebarContext",
    "forwardRef",
    "get",
    "resolveProps",
    "sidebarTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  SidebarCTA: [
    "forwardRef",
    "get",
    "resolveProps",
    "sidebarTheme",
    "twMerge",
    "useResolveTheme",
    "useSidebarContext",
    "useThemeProvider"
  ],
  SidebarCollapse: [
    "ChevronDownIcon",
    "SidebarItemContext",
    "Tooltip",
    "forwardRef",
    "get",
    "resolveProps",
    "sidebarTheme",
    "twMerge",
    "useEffect",
    "useId",
    "useResolveTheme",
    "useSidebarContext",
    "useState",
    "useThemeProvider"
  ],
  SidebarItem: [
    "Badge",
    "Tooltip",
    "forwardRef",
    "get",
    "resolveProps",
    "sidebarTheme",
    "twMerge",
    "useId",
    "useResolveTheme",
    "useSidebarContext",
    "useSidebarItemContext",
    "useThemeProvider"
  ],
  SidebarItemGroup: [
    "SidebarItemContext",
    "forwardRef",
    "get",
    "resolveProps",
    "sidebarTheme",
    "twMerge",
    "useResolveTheme",
    "useSidebarContext",
    "useThemeProvider"
  ],
  SidebarItems: [
    "forwardRef",
    "get",
    "resolveProps",
    "sidebarTheme",
    "twMerge",
    "useResolveTheme",
    "useSidebarContext",
    "useThemeProvider"
  ],
  SidebarLogo: [
    "forwardRef",
    "get",
    "resolveProps",
    "sidebarTheme",
    "twMerge",
    "useId",
    "useResolveTheme",
    "useSidebarContext",
    "useThemeProvider"
  ],
  Spinner: [
    "forwardRef",
    "get",
    "resolveProps",
    "spinnerTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Table: [
    "TableContext",
    "forwardRef",
    "get",
    "resolveProps",
    "tableTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  TableBody: [
    "TableBodyContext",
    "forwardRef",
    "get",
    "resolveProps",
    "tableTheme",
    "twMerge",
    "useResolveTheme",
    "useTableContext",
    "useThemeProvider"
  ],
  TableCell: [
    "forwardRef",
    "get",
    "resolveProps",
    "tableTheme",
    "twMerge",
    "useResolveTheme",
    "useTableBodyContext",
    "useTableContext",
    "useThemeProvider"
  ],
  TableHead: [
    "TableHeadContext",
    "forwardRef",
    "get",
    "resolveProps",
    "tableTheme",
    "twMerge",
    "useResolveTheme",
    "useTableContext",
    "useThemeProvider"
  ],
  TableHeadCell: [
    "forwardRef",
    "get",
    "resolveProps",
    "tableTheme",
    "twMerge",
    "useResolveTheme",
    "useTableContext",
    "useTableHeadContext",
    "useThemeProvider"
  ],
  TableRow: [
    "forwardRef",
    "get",
    "resolveProps",
    "tableTheme",
    "twMerge",
    "useResolveTheme",
    "useTableContext",
    "useThemeProvider"
  ],
  TabItem: ["forwardRef", "resolveProps", "useThemeProvider"],
  Tabs: [
    "Children",
    "forwardRef",
    "get",
    "resolveProps",
    "tabsTheme",
    "twMerge",
    "useEffect",
    "useId",
    "useImperativeHandle",
    "useMemo",
    "useRef",
    "useResolveTheme",
    "useState",
    "useThemeProvider"
  ],
  TextInput: [
    "forwardRef",
    "get",
    "resolveProps",
    "textInputTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Textarea: [
    "forwardRef",
    "get",
    "resolveProps",
    "textareaTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Timeline: [
    "TimelineContext",
    "forwardRef",
    "get",
    "resolveProps",
    "timelineTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider"
  ],
  TimelineBody: [
    "forwardRef",
    "get",
    "resolveProps",
    "timelineTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider",
    "useTimelineContentContext",
    "useTimelineContext",
    "useTimelineItemContext"
  ],
  TimelineContent: [
    "TimelineContentContext",
    "forwardRef",
    "get",
    "resolveProps",
    "timelineTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider",
    "useTimelineContext",
    "useTimelineItemContext"
  ],
  TimelineItem: [
    "TimelineItemContext",
    "forwardRef",
    "get",
    "resolveProps",
    "timelineTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider",
    "useTimelineContext"
  ],
  TimelinePoint: [
    "forwardRef",
    "get",
    "resolveProps",
    "timelineTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider",
    "useTimelineContext",
    "useTimelineItemContext"
  ],
  TimelineTime: [
    "forwardRef",
    "get",
    "resolveProps",
    "timelineTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider",
    "useTimelineContentContext",
    "useTimelineContext",
    "useTimelineItemContext"
  ],
  TimelineTitle: [
    "forwardRef",
    "get",
    "resolveProps",
    "timelineTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider",
    "useTimelineContentContext",
    "useTimelineContext",
    "useTimelineItemContext"
  ],
  Toast: [
    "ToastContext",
    "forwardRef",
    "get",
    "resolveProps",
    "toastTheme",
    "twMerge",
    "useResolveTheme",
    "useState",
    "useThemeProvider"
  ],
  ToastToggle: [
    "XIcon",
    "forwardRef",
    "get",
    "resolveProps",
    "toastTheme",
    "twMerge",
    "useResolveTheme",
    "useThemeProvider",
    "useToastContext"
  ],
  ToggleSwitch: [
    "forwardRef",
    "get",
    "resolveProps",
    "toggleSwitchTheme",
    "twMerge",
    "useId",
    "useResolveTheme",
    "useThemeProvider"
  ],
  Tooltip: [
    "Floating",
    "get",
    "resolveProps",
    "tooltipTheme",
    "useResolveTheme",
    "useThemeProvider"
  ]
};

exports.DEPENDENCY_LIST_MAP = DEPENDENCY_LIST_MAP;
//# sourceMappingURL=dependency-list.cjs.map
